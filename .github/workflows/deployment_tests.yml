name: 'Deployment Tests'

on:
  push:
    branches:
      - main
      - develop

jobs:
  ############################# Deployment Tests for GCP Access Context Manager ####################################
  ## Job to check if secret with service account for deploying perimeter exists
  check-vpc-sa:
    runs-on: ubuntu-latest
    outputs:
      sa-exists: ${{ steps.check.outputs.EXISTS }}

    steps:
      - uses: actions/checkout@v2

      - name: Check service account exists
        id: check
        run: |
          if [[ "${{ secrets.GCP_VPC_SA_KEY }}" == *"private_key_id"* ]]; then
            echo ::set-output name=EXISTS::true
          else
            echo ::set-output name=EXISTS::false
          fi

  # If service account exists run this job
  GCP-perimeter-tests:
    runs-on: ubuntu-latest
    needs: check-vpc-sa
    if: needs.check-vpc-sa.outputs.sa-exists == 'true'

    env:
      working-directory: ./tests/gcp/deployment
      NEW_PROJECT_ID: "test-vpc-${GITHUB_SHA::8}-$(date +%H%M%S)"

    defaults:
      run:
        shell: bash
        working-directory: ${{env.working-directory}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      # Install gcloud sdk and set the service account
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{secrets.GCP_VPC_SA_KEY}}
          export_default_credentials: true

      - name: Validate Yaml
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML jsonschema
          cd access_context_manager/yaml_validation
          python yaml_validation.py

      - name: Set constant variables
        id: vars
        run: echo "::set-output name=GCP_PROJECT_ID::${{ env.NEW_PROJECT_ID }}"

      - name: Setup GCP
        run: |
          gcloud projects create "${{ steps.vars.outputs.GCP_PROJECT_ID }}-1" --folder=${{secrets.GCP_FOLDER_ID}} --set-as-default
          gcloud components install beta --quiet
          gcloud beta billing projects link ${{ steps.vars.outputs.GCP_PROJECT_ID }}-1 --billing-account=${{secrets.GCP_BILLING_ID}}
          gcloud services enable cloudresourcemanager.googleapis.com
          gcloud projects create "${{ steps.vars.outputs.GCP_PROJECT_ID }}-2" --folder=${{secrets.GCP_FOLDER_ID}} --set-as-default
          gcloud beta billing projects link ${{ steps.vars.outputs.GCP_PROJECT_ID }}-2 --billing-account=${{secrets.GCP_BILLING_ID}}
          gcloud services enable cloudresourcemanager.googleapis.com
          gcloud config set compute/zone europe-west2-a

      - name: Configure files
        run: |
          cd access_context_manager
          PROJECT_1=$( gcloud projects list --filter="${{ steps.vars.outputs.GCP_PROJECT_ID }}-1" --format="value(PROJECT_NUMBER)" )
          PROJECT_2=$( gcloud projects list --filter="${{ steps.vars.outputs.GCP_PROJECT_ID }}-2" --format="value(PROJECT_NUMBER)" )
          sed -i "s|access-policy-name|${{secrets.ACCESS_POLICY}}|" main.tf
          sed -i "s|resources-list|[\"${{steps.vars.outputs.GCP_PROJECT_ID}}-1\",\"${{steps.vars.outputs.GCP_PROJECT_ID}}-2\"]|" main.tf
          sed -i "s|source-path|../../../../gcp/access_context_manager/service_perimeter_regular|" main.tf
          sed -i "s|project-1|${PROJECT_1}|" ingressPolicies.yml
          sed -i "s|project-2|${PROJECT_2}|" ingressPolicies.yml

      - name: Deploy perimeter
        run: |
          cd access_context_manager
          terraform init
          terraform plan -out="./plan.tfplan"
          terraform apply plan.tfplan

      - name: Destroy perimter
        run: |
          cd access_context_manager
          terraform destroy -auto-approve

      - name: delete projects
        if: ${{ always() }}
        run: |
          gcloud projects delete ${{ steps.vars.outputs.GCP_PROJECT_ID }}-1
          gcloud projects delete ${{ steps.vars.outputs.GCP_PROJECT_ID }}-2
#          gcloud beta billing projects unlink ${{ steps.vars.outputs.GCP_PROJECT_ID }}-1
#          gcloud beta billing projects unlink ${{ steps.vars.outputs.GCP_PROJECT_ID }}-2