name: 'Unit Tests'

on:
  pull_request:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  unit-tests:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    if: ${{github.event.pull_requests.labels.*.name == 'feature'}} || ${{github.event.pull_requests.labels.*.name == 'bug'}} || ${{github.event.pull_requests.labels.*.name == 'patch'}}
    env:
      working-directory: ./tests/
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{env.working-directory}}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    # Run unit tests in GCP module
    - name: Run GCP unit tests
      run: |
        cd gcp/unit_tests
        MESSAGE="PASSED: All unit tests passed"
        for dir in $(find $(pwd) \( -type f -name 'main.tf' \) |  sed -r 's|/[^/]+$||'); do
          echo ""
          cd $dir
          adapter_name=$(find . -name "*locals*" | sed -e "s/^.\///" -e "s/_locals.tf$//")
          echo -e "\033[1m${adapter_name^^} TESTS\033[0m"
          terraform init > /dev/null
          terraform apply -auto-approve > /dev/null
          for test in $(terraform output -json | jq -r 'keys[]'); do
            test_output=$(terraform output -json $test)
            result=$(echo $test_output | jq -r '.result')
            echo "${test}: ${result^^}"
            if [ "$result" != "pass" ]
            then
              MESSAGE="FAIL: There are failed unit tests"
              echo "    Expected data: $(echo $test_output | jq -r '.expected')"
              echo "    Received data: $(echo $test_output | jq -r '.received')"
              EXIT_CODE=3
            fi
          done
          echo ""
        done
        echo ${MESSAGE^^}
        exit $EXIT_CODE


